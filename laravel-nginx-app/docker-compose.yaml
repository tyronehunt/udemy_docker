version: "3.8"

services: 
  server:
    # image: 'nginx:stable-alpine' (if using prebuilt, but if using our own then need to build at top level .)
    build:
      context: .
      dockerfile: dockerfiles/nginx.dockerfile
    ports: 
      - '8000:80'
    # For deployment comment out:
    volumes: 
      - ./src:/var/www/html #This volume makes our app available to the server
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro #Bind mount to merge our NGINX config into container destination file
    depends_on:
      - php
      - mysql
  php:
    build:
      context: .
      dockerfile: dockerfiles/php.dockerfile
    # For deployment comment out
    volumes:
      - ./src:/var/www/html:delegated #delegated: batch processing, so performance is a bit better
  mysql:
    image: mysql:5.7
    env_file:
      - ./env/mysql.env
  composer:
    build:
      context: ./dockerfiles
      dockerfile: composer.dockerfile
    volumes:
      - ./src:/var/www/html
  artisan:
    build:
      context: .
      dockerfile: dockerfiles/php.dockerfile
    volumes:
      - ./src:/var/www/html
    entrypoint: ["php", "/var/www/html/artisan"] #could do this in dockerfile (but we use that file also in php container which doesn't need this)
  npm:
    image: node:14
    working_dir: /var/www/html
    entrypoint: ["npm"]
    volumes:
      - ./src:/var/www/html